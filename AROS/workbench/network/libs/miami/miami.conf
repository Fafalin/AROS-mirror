##begin config
basename Miami
libbase MiamiBase
version 13.5
##end config

##begin cdef
#include <utility/hooks.h>
#include <sys/socket.h>
#include <netdb.h>

#include <libraries/miami.h>
##end cdef

##begin functionlist
int MiamiSysCtl(LONG *name, ULONG namelen, void *oldp, LONG *oldlenp, void *newp, LONG newlen, int len) (A0, D0, A1, A2, A3, D1, D2)
void SetSysLogPort() ()
void QueryInterfaceTagList(CONST_STRPTR name, struct TagItem *tags) (A0, A1)
.skip 1
void ClearDynNameServ() ()
struct hostent *gethostent() ()
void MiamiDisallowDNS(LONG value) (D0)
void endhostent() ()
void *MiamiGetPid() ()
struct protoent *getprotoent() ()
void endprotoent() ()
APTR MiamiPFAddHook(struct Hook *hook, UBYTE *interface, struct TagItem *taglist) (A0, A1, A2)
void MiamiPFRemoveHook(APTR handle) (A0)
int MiamiGetHardwareLen(char *name) (A0)
void EndDynDomain() ()
void EndDynNameServ() ()
LONG AddDynNameServ(struct sockaddr *entry) (A0)
LONG AddDynDomain(CONST_STRPTR entry) (A0)
int sethostname(const char *name, size_t namelen) (A0, D0)
void ClearDynDomain() ()
struct Library *MiamiOpenSSL(struct TagItem *taglist) (A0)
void MiamiCloseSSL() ()
.skip 1 # 27
.skip 1 # 28
.skip 1 # 29
.skip 1 # 30
.skip 1 # 31
.skip 1 # 32
int MiamiSetSocksConn(struct sockaddr *sa, int len) (A0, D0)
.skip 1 # 34
int MiamiIsOnline(const char *name) (A0)
void MiamiOnOffline(const char *name, int online) (A0, D0)
.skip 1 # 37
STRPTR inet_ntop(LONG family, void *addrptr, char *strptr, LONG len) (D0, A0, A1, D1)
int inet_aton(const char *strptr, void *addrptr) (A0, A2)
int inet_pton(LONG family, const char *strptr, void *addrptr) (D0, A0, A1)
struct hostent *gethostbyname2(const char *name, LONG family) (A0, D0)
char *gai_strerror(LONG error) (D0)
void freeaddrinfo(struct addrinfo *addrinfo) (A0)
LONG getaddrinfo(const char *hostname, const char *servicename, const struct addrinfo *hintsp, struct addrinfo **result) (A0, A1, A2, A3)
LONG getnameinfo(const struct sockaddr *sa, LONG addrlen, char *hostname, LONG hostlen, char *servicename, LONG servicelen, LONG flags) (A0, D0, A1, D1, A2, D2, D3)
LONG if_nametoindex(const char *name) (A0)
const char *if_indextoname(LONG index, const char *name) (D0, A0)
struct if_nameindex *if_nameindex() ()
void if_freenameindex(struct if_nameindex *nameindex) (D0)
LONG MiamiSupportsIPV6() ()
LONG MiamiGetResOptions() ()
void MiamiSetResOptions(LONG options) (D0)
LONG sockatmark(LONG sockfd) (D0)
void MiamiSupportedCPUs(ULONG *apis, ULONG *callbacks, ULONG *kernel) (A0, A1, A2)
LONG MiamiGetFdCallBack(void **cbptr) (A0)
LONG MiamiSetFdCallback(void *cbptr, LONG cputype) (A0, D0)
struct UserGroupCredentials *MiamiGetCredentials() ()
void *FindKernelVar(CONST_STRPTR name) (A0)
##end functionlist
