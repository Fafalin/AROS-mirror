#!/bin/sh

PATH=/bin:/usr/bin:/sbin:/usr/sbin
export PATH

init=/sbin/init
root=
rootdelay=
rootfstype=auto
ro="ro"
rootflags=
device=

mount -n -t devtmpfs devtmpfs /dev
mount -n -t proc     proc     /proc
mount -n -t sysfs    sysfs    /sys
mount -n -t tmpfs    tmpfs    /run

read -r cmdline < /proc/cmdline

for param in $cmdline ; do
  case $param in
    init=*      ) init=${param#init=}             ;;
    root=*      ) root=${param#root=}             ;;
    rootdelay=* ) rootdelay=${param#rootdelay=}   ;;
    rootfstype=*) rootfstype=${param#rootfstype=} ;;
    rootflags=* ) rootflags=${param#rootflags=}   ;;
    ro          ) ro="ro"                         ;;
    rw          ) ro="rw"                         ;;
  esac
done

# udevd location depends on version
if [ -x /sbin/udevd ]; then
  UDEV_PATH=/sbin
else
  UDEV_PATH=/lib/udev
fi

${UDEV_PATH}/udevd --daemon --resolve-names=never
udevadm trigger
udevadm settle

if [ -f /etc/mdadm.conf ] ; then mdadm -As                                    ; fi
if [ -x /sbin/vgchange  ] ; then /sbin/vgchange --noudevsync -a y > /dev/null ; fi
if [ -n "$rootdelay"    ] ; then sleep "$rootdelay"                           ; fi

if [ "$root" = "sh" ]; then
# try mounting livecd and running script from it
    mkdir /aroscdmount
    mount /dev/sr0 /aroscdmount
    if [ -e /aroscdmount/boot/aros-init ]; then
        sh /aroscdmount/boot/aros-init
    else
        printf "/aroscdmount/boot/aros-init not found, starting sh directly.\n"
    fi
    sh
else
    cd /
    ./boot/AROSBootstrap &> /dev/null
    cd /boot-stage-2
    ./boot/AROSBootstrap
    sh
fi